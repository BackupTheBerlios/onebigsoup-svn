# -*- coding: iso-8859-1 -*-
"""
MoinMoin - localnames action generates v1.1 Local Names descriptions

This action generates a Local Names v1.1 namespace description representing
the wiki.

You must define "wiki_url_prefix" and "interwikiname" in your moin_config.py
file.

If your wiki's URL begins with:

    http://wiki.taoriver.net/moin.cgi/
    
...then your moin_config.py file should contain:

    wiki_url_prefix = "http://wiki.taoriver.net/moin.cgi/"
    interwikiname = "(something)"

The URL for your namespace description would then be:

    http://wiki.taoriver.net/moin.cgi/?action=localnames

...provided that this file is named localnames.py

@copyright: (c) 2004 by Lion Kimbro <lion@speakeasy.org>
@license: GNU GENERAL PUBLIC LICENSE, Version 2, June 1991
"""

from MoinMoin import config, util, wikiutil, intermap


output = u"""Content-Type: text/plain; charset=utf-8

X VERSION 1.1

# http://purl.net/net/localnames/
#
# Local Names 1.1 Description
# -----------------------
# automatically generated by MoinMoin localnames plug-in
#
# This page is: %(WIKI_URL_PREFIX)s?action=localnames
#
# Description Follows:
#

X PREFERRED-NAME "%(INTERWIKI_NAME)s"

LN this "%(WIKI_URL_PREFIX)s?action=localnames"

X NAMES-LIST-PATTERN "%(WIKI_URL_PREFIX)s$NAME"
X NAMES-LIST "%(WIKI_URL_PREFIX)sTitleIndex?action=titleindex"
X ACCEPT-ADDITION-BY-FORM "%(WIKI_URL_PREFIX)s$NAME"

X FINAL "$(WIKI_URL_PREFIX)s$NAME"
PATTERN force "%(WIKI_URL_PREFIX)s$NAME"

""" % {"WIKI_URL_PREFIX": config.wiki_url_prefix,
       "INTERWIKI_NAME": config.interwikiname}


def execute(pagename, request):
    request.encoding = 'utf-8'
    request.write(output.encode('utf-8'))
    pages = list(wikiutil.getPageList(config.text_dir))
    pages.sort()

    pages = filter(request.user.may.read, pages)

    for name in pages:
        name = name.decode('iso-8859-1')
        line = u'LN "%(NAME)s" "%(URL)s"\n' % \
               {"NAME": name,
                "URL": config.wiki_url_prefix + name}
        request.write(line.encode('utf-8'))

    request.write(u'\n'.encode('utf-8'))
    
    for wikitag, urlprefix in intermap.load_intermap().items():
        line = u'PATTERN "%s" "%s"\n' % (wikitag, urlprefix)
        request.write(line.encode('utf-8'))
    
    request.no_closing_html_code = True

